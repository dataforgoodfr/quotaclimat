name: Build & Deploy to Scaleway

on:
  push:
      # Sequence of patterns matched against refs/heads
    branches:    
      - main

  # to be able to force deploy    
  workflow_dispatch:


env:
  PYTHON_VERSION: '3.12'
  POETRY_VERSION: '2.1.1'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - uses: actions/checkout@v4
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: ${{ env.POETRY_VERSION }}
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Poetry install & bump version
      run: |
        poetry install --only dev
        poetry version patch
        PROJECT_VERSION=$(poetry version --short)
        echo "PROJECT_VERSION=$PROJECT_VERSION" >> $GITHUB_ENV
        git config user.name barometre-github-actions
        git config user.email barometre-github-actions@github.com
        git add pyproject.toml
        git commit -m "[no ci]: $PROJECT_VERSION bumping version"
        git push origin main
    - name: Login to Scaleway Container Registry
      uses: docker/login-action@v3
      with:
        username: nologin
        password: ${{ secrets.SCALEWAY_API_KEY }}
        registry: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}

    - name: Build mediatree_import image
      run: docker build -f Dockerfile_api_import . -t ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/mediatree_import:${{ env.PROJECT_VERSION }}
    - name: Tag mediatree_import latest image
      run: docker tag ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/mediatree_import:${{ env.PROJECT_VERSION }} ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/mediatree_import:latest
    - name: Push mediatree_import Image
      run: docker push --all-tags ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/mediatree_import

    - name: update scaleway job definition with version mediatree_import
      uses: jawher/action-scw@v2.34.0
      env:
        SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
        SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
        SCW_ORGANIZATION_ID: ${{ secrets.SCW_ORGANIZATION_ID }}
        SCW_ZONE: ${{ secrets.SCW_ZONE }}
      with:
        args: jobs definition update ${{ secrets.SCALEWAY_JOB_IMPORT_ID }} image-uri=${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/mediatree_import:${{ env.PROJECT_VERSION }}
    
    - name: Build s3 image
      run: docker build -f Dockerfile_api_to_s3 . -t ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/s3:${{ env.PROJECT_VERSION }}
    - name: Tag s3 latest image
      run: docker tag ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/s3:${{ env.PROJECT_VERSION }} ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/s3:latest
    - name: Push s3 Image
      run: docker push ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/s3:${{ env.PROJECT_VERSION }}

    - name: update scaleway job definition with version s3
      uses: jawher/action-scw@v2.34.0
      env:
        SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
        SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
        SCW_ORGANIZATION_ID: ${{ secrets.SCW_ORGANIZATION_ID }}
        SCW_ZONE: ${{ secrets.SCW_ZONE }}
      with:
        args: jobs definition update ${{ secrets.SCALEWAY_JOB_S3_ID }} image-uri=${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/s3:${{ env.PROJECT_VERSION }}
    
    - name: Build stop_word image
      run: docker build -f Dockerfile_stop_word . -t ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/stop_word:${{ env.PROJECT_VERSION }}
    - name: Tag stop_word latest image
      run: docker tag ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/stop_word:${{ env.PROJECT_VERSION }} ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/stop_word:latest
    - name: Push stop_word Image
      run: docker push ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/stop_word:${{ env.PROJECT_VERSION }}

    - name: update scaleway job definition with version stopwords
      uses: jawher/action-scw@v2.34.0
      env:
        SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
        SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
        SCW_ORGANIZATION_ID: ${{ secrets.SCW_ORGANIZATION_ID }}
        SCW_ZONE: ${{ secrets.SCW_ZONE }}
      with:
        args: jobs definition update ${{ secrets.SCALEWAY_STOP_WORDS_ID }} image-uri=${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/stop_word:${{ env.PROJECT_VERSION }}

    - name: update scaleway job update job
      uses: jawher/action-scw@v2.34.0
      env:
        SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
        SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
        SCW_ORGANIZATION_ID: ${{ secrets.SCW_ORGANIZATION_ID }}
        SCW_ZONE: ${{ secrets.SCW_ZONE }}
      with:
        args: jobs definition update ${{ secrets.SCALEWAY_UPDATE_JOB_ID }} image-uri=${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/mediatree_import:${{ env.PROJECT_VERSION }}
