name: tests

on:
  push:

env:
  PYTHON_VERSION: '3.11'
  POETRY_VERSION: '1.6.1'

jobs:
  poetry_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: actions/checkout@v2
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Verify poetry.lock agrees with pyproject.toml
        run: poetry check --lock

  unit_test:
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:13.6
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
        # Provide the password for postgres
        env:
          POSTGRES_USER: user
          POSTGRES_DB: barometre
          POSTGRES_PASSWORD: password
          POSTGRES_HOST: postgres_db
          POSTGRES_PORT: 5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: actions/checkout@v2
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: poetry install
        run: poetry install
      - name: pytest run
        run: "poetry run pytest --cov test test/"
        env:
          POSTGRES_USER: user
          POSTGRES_DB: barometre
          POSTGRES_PASSWORD: password
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432